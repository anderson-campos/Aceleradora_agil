import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;
import java.util.UUID;

import java.util.UUID;

class Produto {
    private String id;
    private String nome;
    private String categoria;
    private int quantidade;
    private double preco;

    public Produto(String nome, String categoria, int quantidade, double preco) {
        this.id = UUID.randomUUID().toString();
        this.nome = nome;
        this.categoria = categoria;
        this.quantidade = quantidade;
        this.preco = preco;
    }

    public String getId() {
        return id;
    }

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getCategoria() {
        return categoria;
    }

    public void setCategoria(String categoria) {
        this.categoria = categoria;
    }

    public int getQuantidade() {
        return quantidade;
    }

    public void setQuantidade(int quantidade) {
        this.quantidade = quantidade;
    }

    public double getPreco() {
        return preco;
    }

    public void setPreco(double preco) {
        this.preco = preco;
    }

    @Override
    public String toString() {
        return "ID: " + id +
                "\nNome: " + nome +
                "\nCategoria: " + categoria +
                "\nQuantidade: " + quantidade +
                "\nPreço: " + preco;
    }
}


import java.security.ProtectionDomain;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

public class GerenciadorInventario {
    private static ArrayList<Produto> inventario = new ArrayList<>();

    public static void adicionarProdutos() {
        Scanner scanner = new Scanner(System.in);

        try {
            System.out.print("Digite o nome do produto: ");
            String nome = scanner.nextLine();

            System.out.print("Digite a categoria do produto: ");
            String categoria = scanner.nextLine();

            System.out.print("Digite a quantidade em estoque: ");
            int quantidade = Integer.parseInt(scanner.nextLine());

            System.out.print("Digite o preço do produto: ");
            double preco = Double.parseDouble(scanner.nextLine());

            Produto produto = new Produto(nome, categoria, quantidade, preco);
            inventario.add(produto);

            System.out.println("\nProduto cadastrado com sucesso!");
            System.out.println("\n"+ produto + "\n");
        } catch (NumberFormatException e) {
            System.out.println("ERRO: Entrada inválida. Certifique-se de digitar numeros corretamente para a quantidade e preço");
        }
    }

    public static void atualizarProduto() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o ID do produto que deseja atualizar: ");
        String id = scanner.nextLine();

        Produto produto = null;
        for (Produto p : inventario){
            if (p.getId().equals(id)){
                produto = p;
                break;
            }
        }

        if (produto == null){
            System.out.println("Erro: Produto com ID " + id + " não encontrado!");
            return;
        }

        System.out.println("\nProduto encontrado");
        System.out.println(produto);

        System.out.println("\nEscolha o campo para atualizar: ");
        System.out.println("1. Nome");
        System.out.println("2. Categoria");
        System.out.println("3. Quantidade");
        System.out.println("4. Preço");
        System.out.print("Opção: ");

        try{
            int opcao = Integer.parseInt(scanner.nextLine());

            switch (opcao){
                case 1:
                    System.out.print("Digite o novo nome: ");
                    produto.setNome(scanner.nextLine());
                    break;

                case 2:
                    System.out.print("Digite a nova categoria: ");
                    produto.setCategoria(scanner.nextLine());
                    break;

                case 3:
                    System.out.print("Digite a nova quantidade: ");
                    produto.setQuantidade(Integer.parseInt(scanner.nextLine()));
                    break;

                case 4:
                    System.out.print("Digite o novo preço: ");
                    produto.setPreco(Double.parseDouble(scanner.nextLine()));
                    break;

                default:
                    System.out.println("Opção inválida! Nenhuma alteração foi feita.");
                    return;
            }

            System.out.println("\nProduto atualizado com sucesso!");
            System.out.println("\n" + produto + "\n");

        } catch (NumberFormatException e){
            System.out.println("Erro: Entrada inválida. Certifique-se de digitar números corretamente.");
        }

    }

    public static void excluirProduto() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Digite o ID do produto que deseja excluir: ");
        String id = scanner.nextLine();

        Produto produto = null;
        for (Produto p : inventario){
            if (p.getId().equals(id)){
                produto = p;
                break;
            }
        }

        if (produto == null){
            System.out.println("Erro: Produto com ID: " +id+ "não encontrado!");
            return;
        }

        System.out.println("\nProduto encontrado");
        System.out.println(produto);

        System.out.println("Tem certeza que deseja excluir este produto? (s/n): ");
        String confirmacao = scanner.nextLine();

        if (confirmacao.equalsIgnoreCase("s")){
            inventario.remove(produto);
            System.out.println("Produto excluído com sucesso!");
        } else {
            System.out.println("Ação de exclusão cancelada.");
        }
    }

    public static void filtrarPorCategoria() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Digite a categoria para filtrar: ");
        String categoria = scanner.nextLine();

        List<Produto> filtrados = new ArrayList<>();

        for (Produto produto : inventario){
            if (produto.getCategoria().equalsIgnoreCase(categoria)){
                filtrados.add(produto);
            }
        }

        if (filtrados.isEmpty()){
            System.out.println("Nenhum produto encontrado na categoria: " + categoria);
        }else {
            System.out.println("Produto na categoria " + categoria + ": ");
            for (Produto produto : filtrados){
                System.out.println(produto);
                System.out.println();
            }
        }
    }

    public static void ordenarProdutos() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("\nEscolha o critério de ordenação:");
        System.out.println("1. Nome");
        System.out.println("2. Quantidade");
        System.out.println("3. Preço");
        System.out.print("Opção: ");

        try {
            int criterio = Integer.parseInt(scanner.nextLine());

            Comparator<Produto> comparator;
            if (criterio == 1){
                comparator = Comparator.comparing(Produto::getNome);
            } else if (criterio == 2){
                comparator = Comparator.comparingInt(Produto::getQuantidade);
            } else if (criterio == 3){
                comparator = Comparator.comparingDouble(Produto::getPreco);
            } else {
                System.out.println("Critério inválido!Retornando ao menu principal");
                return;
            }

            inventario.sort(comparator);

            System.out.println("Produtos ordenados: ");
            for (Produto produto : inventario){
                System.out.println(produto);
                System.out.println();
            }
        }catch (NumberFormatException e){
            System.out.println("Erro: Entreada inválida. Por favor, digite um número válido.");
        }
    }
}

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("=== Sistema de Gerenciamento de Inventário ===");

        boolean continuar = true;
        while(continuar){
            System.out.println("\nMenu: ");
            System.out.println("1. Adicionar Produto");
            System.out.println("2. Atualizar Produto");
            System.out.println("3. Excluir Produto");
            System.out.println("4. Filtrar por Categoria");
            System.out.println("5. Ordenar Produtos");
            System.out.println("6. Sair");
            System.out.print("Escolha uma opção: ");

            try{
                int opcao = Integer.parseInt(scanner.nextLine());

                if (opcao == 1){
                    GerenciadorInventario.adicionarProdutos();
                } else if (opcao == 2) {
                    GerenciadorInventario.atualizarProduto();
                } else if (opcao == 3) {
                    GerenciadorInventario.excluirProduto();
                } else if (opcao == 4) {
                    GerenciadorInventario.filtrarPorCategoria();
                } else if (opcao == 5) {
                    GerenciadorInventario.ordenarProdutos();
                } else if (opcao == 6) {
                    continuar = false;
                    System.out.println("Encerrando o sistema...");
                } else {
                    System.out.println("Opção inválida! Tente novamente.");
                }
            }catch (NumberFormatException e){
                System.out.println("ERRO: Entrada inválida. Por favor, digite um número para escolher a opção.");
            }
        }
        scanner.close();
    }
}
